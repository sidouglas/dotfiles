if [[ "$(uname -m)" == "arm64" ]]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
else
  eval "$(/usr/local/bin/brew shellenv)"
fi


# Set Variables
HOSTNAME=$(hostname)
export NULLCMD=bat
export DOTFILES="$HOME/.dotfiles"
export HOMEBREW_DIR="$DOTFILES/$HOSTNAME"
export HOMEBREW_BUNDLE_FILE="$HOMEBREW_DIR/Brewfile"

# Adjust History Variables & Options

[[ -z $HISTFILE ]] && HISTFILE="$HOME/.zsh_history"
HISTSIZE=5000 # Session Memory Limit
SAVEHIST=4000 # File Memory Limit
RPROMPT='%*'
setopt histNoStore
setopt extendedHistory
setopt histIgnoreAllDups
unsetopt appendHistory # explicit and unnecessary
setopt incAppendHistoryTime


# Create Aliases
alias ..='cd ../'                           # Go back 1 directory level
alias cd..='cd ../'                         # Go back 1 directory level (for fast typers)
alias ...='cd ../../'                       # Go back 2 directory levels
alias .3='cd ../../../'                     # Go back 3 directory levels
alias .4='cd ../../../../'                  # Go back 4 directory levels
alias .5='cd ../../../../../'               # Go back 5 directory levels
alias .6='cd ../../../../../../'            # Go back 6 directory levels

# updates all software installed via brew cask ( apps )
alias brewupcask="brew upgrade --cask --greedy"
alias brewdump="mkdir -p $HOMEBREW_DIR && cd $HOMEBREW_DIR && brew bundle dump --force --describe && bat Brewfile"
alias brewupcask="brew upgrade --cask --greedy"
alias cic='set completion-ignore-case On'   # cic:   Make tab-completion case-insensitive
alias cp='cp -iv'                           # Preferred cp implementation
alias d='cd ~/Documents/'
alias dockerkill='docker kill $(docker ps -q)'
alias dockerstop='docker ps -aq | xargs docker stop'
alias edit='open -na "IntelliJ IDEA.app" --args "$@"'
alias exa='exa -laFh --git'
alias fix_stty='stty sane'                  # fix_stty:     Restore terminal settings when screwed up
alias ftrail='<<<${(F)fpath}'
alias gr="git recentco"
alias hosts="sudo nano /etc/hosts"
alias ip="curl ifconfig.me"
alias less='less -FSRXc'                    # Preferred 'less' implementation
alias ls='exa'
alias man=batman
alias mkdir='mkdir -pv'                     # Preferred 'mkdir' implementation
alias mv='mv -iv'                           # Preferred 'mv' implementation
alias openb='open -na "Brave Browser" --args "$1"'
alias path='echo -e ${PATH//:/\\n}'         # path:         Echo all executable Paths
alias python='/opt/homebrew/bin/python3'
alias reload="source ~/.zshrc"              # reload:       Reload the shell (i.e. itself)
alias rm=trash                              # rm:           Trash (move to trash)
alias show_options='shopt'                  # Show_options: display bash options settings
alias yt='echo "******USE ytdl id url OR ytbest url*******" && yt-dlp -F'                        # Will show all possible downloads
alias ytbest="yt-dlp -f 'bv*+ba' $1"
alias ytdl="yt-dlp -f $1 $2"
alias ytmp3='yt-dlp -x --audio-format mp3'  # Download from youtube, as mp3
alias ~="cd ~"                              # ~:            Go Home

cd() { builtin cd "$@"; ls; }               # Always list directory contents upon 'cd'

# Load history into shell (shareHistory alternative)
alias lh='fc -RI; echo "loaded and showing..."; history;'

# Write Handy Functions
function mkcd() { mkdir -p "$@" && cd "$_"; }
function trash () { command mv "$@" ~/.Trash ; }

# MOV files
function ffmov () { ffmpeg -i "$1" -vcodec h264 -acodec aac "${2:-output.mp4}" }
function ffmov_no_audio () { ffmpeg -i "$1" -vcodec h264 -an "${2:-output-no-audio.mp4}"}
function ffwebm () { ffmpeg -i "$1" -movflags faststart -profile:v high -level 4.2 "${2:-output.mp4}" }
function m4amp3 () { ffmpeg -i "$1" -codec:v copy -codec:a libmp3lame -q:a 2 "${2:-output.mp3}" }

function killname() {  if [ "$1" = "" ]; then
     echo "Nothing to do"
  else
    ps -ej | grep "$1"
    ps -ej | grep "$1" | awk '{print $2}' | xargs kill -s SIGINT
  fi
}

function kp (){ kill -9 $(lsof -i:"$1" -t); }
